PROCESS
-----------------------------------------------------------------------
<strlend>
0x401000:
	0x48: REX.W000
	0xc7: MOV
	0xc0: Mod = 0b11, reg = 0b000, r/m = 0b000
	0x00..00:
	> mov rax, 0

0x401007:
	0x49: REX.W00B
	0x89: MOV
	0xf2: Mod = 0b11, reg = 0b110, r/m = 0b(1)010
	> mov r10, rsi

0x40100a:
	0x48: REX.W000
	0x83: CMP
	0xfe: Mod = 0b11, reg = 0b111, r/m = 0b110
	0x00:
	> cmp rsi, 0

0x40100e:
	0x74: JZ/JE
	0x1c: 0x401010 + 0x1c = 0x40102c ; relative to $rip
	> jz 0x40102c

0x401010:
	0x48: REX.W000
	0x83: CMP
	0xfa: Mod = 0b11, reg = 0b111, r/m = 0b010
	0x00:
	> cmp rdx, 0

0x401014:
	0x74: JZ/JE
	0x16: 0x401016 + 0x16 = 0x40102c
	> jz 0x40102c

<strlend_loop>
0x401016:
	0x41: REX.000B
	0x80: CMP
	0x3a: Mod = 0b00, reg = 0b111, r/m = 0b(1)010
	0x00:
	> cmp BYTE [r10], 0

0x40101a:
	0x74: JZ/JE
	0x0a: 0x40101c + 0x0a = 0x401026
	> jz 0x401026

0x40101c:
	0x41: REX.000B
	0x38: CMP
	0x0a: Mod = 0b00, reg = 0b001, r/m = 0b(1)010
	> cmp BYTE [r10], cl

0x40101f:
	0x74: JZ/JE
	0x05: 0x401021 + 0x05 = 0x401026
	> jz 0x401026

0x401021:
	0x49: REX.W00B
	0xff: INC
	0xc2: Mod = 0b11, reg = 0b000, r/m = 0b(1)010
	> inc r10

0x401024:
	0xeb: JMP
	0xf0: 0x401026 + 0xf0 (sgn extended 0xfffff0) = 0x401016

<strlend_loop_end>
0x401026:
	0x4c: REX.WR00
	0x89: MOV
	0xd0: Mod = 0b11, reg = 0b(1)010, r/m = 0b000
	> mov rax, r10

0x401029:
	0x48: REX.W000
	0x29: SUB
	0xf0: Mod = 0b11, reg = 0b110, r/m = 0b000
	> sub rax, rsi

<strlend_finish>
0x40102c:
	0x48: REX.W000
	0x83: CMP
	0xff: Mod = 0b11, reg = 0b111, r/m = 0b111
	0x00:
	> cmp rdi, 0

0x401030:
	0x74: JZ/JE
	0x03: 0x401032 + 0x03 = 0x401035
	> jz 0x401035

0x401032:
	0x4c: REX.WR00
	0x89: MOV
	0x17: Mod = 0b00, reg = 0b(1)010, r/m = 0b111
	> mov QWORD [rdi], r10

<strlend_end>
0x401035:
	0xc3: RET
	> ret

ASSEMBLY FORM (verified correct)
-----------------------------------------------------------------------
<strlend> (0x401000)
	mov rax, 0
	mov r10, rsi
	cmp rsi, 0
	jz 0x40102c <strlend_finish>
	cmp rdx, 0
	jz 0x40102c <strlend_finish>
<strlend_loop> (0x401016)
	cmp BYTE [r10], 0
	jz 0x401026 <strlend_loop_end>
	cmp BYTE [r10], cl
	jz 0x401026 <strlend_loop_end>
	inc r10
	jmp 0x401016 <strlend_loop>
<strlend_loop_end> (0x401026)
	mov rax, r10
	sub rax, rsi
<strlend_finish> (0x40102c)
	cmp rdi, 0
	jz 0x401035 <strlend_end>
	mov QWORD [rdi], r10
	ret
